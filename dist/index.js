// Generated by CoffeeScript 1.10.0
(function() {
  var PORT, _, config, deleteBeing, fs, getBeing, getBeings, http, mongoose, postBeing, restify, server;

  http = require('http');

  mongoose = require('mongoose');

  config = require('./config');

  restify = require('restify');

  fs = require('fs');

  _ = require('underscore');

  PORT = 8082;

  _.each(['being', 'community'], function(file) {
    return require("./models/" + file).register_model(mongoose);
  });

  mongoose.connect(config.creds.mongodb_uri);

  server = restify.createServer();

  server.use(restify.bodyParser());

  getBeings = function(req, res, next) {
    res.header('Access-Control-Allow-Origin', '*');
    res.header('Access-Control-Allow-Headers', 'X-Requested-With');
    return mongoose.models.Being.find(function(err, data) {
      return res.send(data);
    });
  };

  getBeing = function(req, res, next) {
    res.header('Access-Control-Allow-Origin', '*');
    res.header('Access-Control-Allow-Headers', 'X-Requested-With');
    console.log(req.params.id);
    return mongoose.models.Being.find({
      _id: req.params.id
    }, function(err, data) {
      return res.send(data);
    });
  };

  deleteBeing = function(req, res, next) {
    res.header('Access-Control-Allow-Origin', '*');
    res.header('Access-Control-Allow-Headers', 'X-Requested-With');
    res.header('Access-Control-Allow-Methods', '*');
    return mongoose.models.Being.remove({
      _id: req.params.id
    }, function(err, data) {
      return res.send(204);
    });
  };

  postBeing = function(req, res, next) {
    res.header('Access-Control-Allow-Origin', '*');
    res.header('Access-Control-Allow-Headers', 'X-Requested-With');
    return mongoose.models.Being.create({
      first_name: req.params.first_name,
      last_name: req.params.last_name,
      age: req.params.age
    }, function(err, being) {
      return res.send(being);
    });
  };

  server.get('/beings/:id', getBeing);

  server.get('/beings', getBeings);

  server.del('/beings', deleteBeing);

  server.post('/beings', postBeing);

  server.listen(PORT);

}).call(this);
